<UserControl x:Class="NekoPlayer.Pages.WindowMainPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:commands="clr-namespace:NekoPlayer.Wpf.Commands"
             xmlns:core="clr-namespace:NekoPlayer.Core"
             xmlns:player="clr-namespace:NekoPlayer"
             xmlns:local="clr-namespace:NekoPlayer.Pages"
             xmlns:widget="clr-namespace:NekoPlayer.Wpf.Widget"
             xmlns:interfaceCore="clr-namespace:NekoPlayer.Core.Interfaces"
             xmlns:models="clr-namespace:NekoPlayer.Wpf.ModelViews"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:converters="clr-namespace:NekoPlayer.Wpf.Converters" xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:local1="clr-namespace:NekoPlayer.Wpf.Fixes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <ResourceDictionary>
            <ControlTemplate x:Key="NoScroll">
                <ItemsPresenter></ItemsPresenter>
            </ControlTemplate>
            <DataTemplate x:Key="cellRow1">
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <TextBlock Text="{Binding TrackInfo.TrackId}" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="cellRow2" >
                <StackPanel>
                    <TextBlock Text="{Binding TrackInfo.Title}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Subtitle1TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Ready}" Value="False">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Ready}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock Text="{Binding TrackInfo.Album}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"  Style="{StaticResource OverlineTextBlock}"/>
                    <TextBlock Text="{Binding TrackInfo.Artist}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"  Style="{StaticResource OverlineTextBlock}"/>
                </StackPanel>
            </DataTemplate>
            <converters:GetPlayerContextConverter x:Key="GetPlayerContext"/>
            <converters:AlbumsImageToObjectConverter x:Key="AlbumsImageToObject"/>
            <converters:MultiBindingToArgsConverter x:Key="ConvertToArgsArray"/>
            <ContextMenu x:Key="MenuOnPlaylistButton">
                <MenuItem Header="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Common_Rename}}"
                          Command="{x:Static player:Player.EditNamePlaylistCommand}" CommandParameter="{Binding}" Icon="{materialDesign:PackIcon Kind=LeadPencil}"/>
                <MenuItem Header="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Common_Delete}}" 
                          Command="{x:Static player:Player.DeletePlaylistCommand}" CommandParameter="{Binding}" Icon="{materialDesign:PackIcon  Kind=PlaylistRemove}"/>
            </ContextMenu>
            <ContextMenu x:Key="MenuOnBackground">
                <MenuItem Header="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Playlist_Create}}" 
                          Icon="{materialDesign:PackIcon Kind=PlaylistPlus}" Command="{x:Static player:Player.CreatePlaylistCommand}"/>
            </ContextMenu>
            <ItemsPanelTemplate x:Key="AlbumItemPanel">
                <WrapPanel/>
            </ItemsPanelTemplate>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Wpf/Widget/AlbumMaskedPlaylist.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>

        <materialDesign:Transitioner SelectedIndex="0" x:Name="PageController" Focusable="False">
            <materialDesign:Transitioner.CommandBindings>
                <CommandBinding Command="NavigationCommands.BrowseBack" CanExecute="BackBrowse_CanExecute" Executed="BackBrowse_Executed"/>
            </materialDesign:Transitioner.CommandBindings>
            <materialDesign:TransitionerSlide>
                <materialDesign:TransitionerSlide.ForwardWipe>
                    <materialDesign:SlideWipe Direction="Left"/>
                </materialDesign:TransitionerSlide.ForwardWipe>
                <ScrollViewer>
                    <ContentControl DataContext="{Binding Converter={StaticResource GetPlayerContext}}" MaxWidth="1000" Focusable="False"> 
                        <StackPanel Margin="16" Focusable="False">
                            <TextBlock Style="{StaticResource Body1TextBlock}" Foreground="{DynamicResource MaterialDesignBody}" Text="{Binding Converter={StaticResource LanguagePack}, 
                                ConverterParameter={StaticResource Playlist_Header}}" Margin="16"/>
                            <ItemsControl x:Name="PlaylistList" ItemsSource="{Binding Playlists}" ItemsPanel="{StaticResource AlbumItemPanel}"
                                    Background="Transparent" ContextMenu="{StaticResource MenuOnBackground}" Focusable="False">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type interfaceCore:IPlaylist}">
                                        <Button Height="Auto" Tag="{Binding Path=(interfaceCore:IPlaylist.Identicator)}" 
                                                Style="{StaticResource AlbumSkinnedPlaylistButton}" Click="PlaylistButton_Click"
                                                ContextMenu="{StaticResource MenuOnPlaylistButton}" AllowDrop="True" DataContext="{Binding}" Drop="PlaylistButton_Drop">
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ContentControl>
                </ScrollViewer>
            </materialDesign:TransitionerSlide>
            <materialDesign:TransitionerSlide>
                <materialDesign:TransitionerSlide.BackwardWipe>
                    <materialDesign:SlideWipe Direction="Right" />
                </materialDesign:TransitionerSlide.BackwardWipe>
                <ScrollViewer >
                    <ContentControl DataContext="{Binding SelectedPlaylist}" Focusable="False">
                        <StackPanel Margin="80,24" MaxWidth="1000">
                            <Grid Height="160">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="160"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Border CornerRadius="4" ClipToBounds="True" Name="Mask"/>
                                <Grid>
                                    <materialDesign:PackIcon VerticalAlignment="Center" HorizontalAlignment="Center" Kind="{Binding Path=DefaultIcon, FallbackValue=ImageOffOutline}" Width="120" Height="120"
                                                   Foreground="{DynamicResource  MaterialDesignBodyLight}" />
                                    <Image Source="{Binding AlbumsImage, Converter={StaticResource AlbumsImageToObject}, ConverterParameter=NoDefault}" RenderOptions.BitmapScalingMode="HighQuality"/>
                                </Grid>
                                <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="16">
                                    <TextBlock Style="{StaticResource  Headline5TextBlock}" Foreground="{DynamicResource MaterialDesignBody}" Text="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                                    <TextBlock Style="{StaticResource  CaptionTextBlock}" Foreground="{DynamicResource MaterialDesignBody}" Text="{Binding ElementName=PageController, Path=DataContext.SelectedPlaylist.FullDurationString, IsAsync=True, FallbackValue='Loading...'}"/>
                                    <TextBlock Style="{StaticResource  CaptionTextBlock}" Foreground="{DynamicResource MaterialDesignBody}" Text="{Binding ElementName=PageController, Path=DataContext.SelectedPlaylist.Playables.Count, IsAsync=True, FallbackValue='Loading...', Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource TrackCount}}"/>
                                </StackPanel>
                                <StackPanel Grid.Column="1" VerticalAlignment="Bottom" Margin="16" Orientation="Horizontal">
                                    <Button Style="{StaticResource FlatButton}" Command="{x:Static player:Player.UsePlaylistCommand}" CommandParameter="{Binding }">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon VerticalAlignment="Center" Kind="Play"/>
                                            <TextBlock Text="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Action_Play}}"  VerticalAlignment="Center" Margin="4,0"/>
                                        </StackPanel>
                                    </Button>
                                    <Button Style="{StaticResource FlatButton}" Command="{x:Static player:Player.EditNamePlaylistCommand}" CommandParameter="{Binding }">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon VerticalAlignment="Center" Kind="LeadPencil"/>
                                            <TextBlock Text="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Common_Rename}}" VerticalAlignment="Center" Margin="4,0"/>
                                        </StackPanel>
                                    </Button>
                                    <Button Style="{StaticResource FlatButton}" Command="{x:Static player:Player.DeletePlaylistCommand}" CommandParameter="{Binding }">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon VerticalAlignment="Center" Kind="Trash"/>
                                            <TextBlock Text="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Common_Delete}}" VerticalAlignment="Center" Margin="4,0"/>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <materialDesign:Card Margin="0,32,0,32">
                                <ContentControl Focusable="False">
                                    <ListView x:Name="PlaylistListView" ItemsSource="{Binding Playables, NotifyOnTargetUpdated=True}" ScrollViewer.CanContentScroll="False"
                                          ScrollViewer.VerticalScrollBarVisibility="Disabled" Loaded="ListView_Loaded" Padding="0" SelectionMode="Single"
                                              TargetUpdated="PlaylistListView_TargetUpdated" SizeChanged="PlaylistListView_SizeChanged" >

                                        <i:Interaction.Behaviors>
                                            <local1:IgnoreMouseWheelBehavior />
                                        </i:Interaction.Behaviors>
                                        <ListView.ContextMenu>
                                            <ContextMenu DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget}">
                                                <MenuItem Command="{x:Static player:Player.GetRealTagCommand}"
                                                    Header="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Dialog_GetTrackinfo_Header}}"
                                                    CommandParameter="{Binding (ListView.SelectedItem)}"/>
                                                <MenuItem Command="{x:Static player:Player.ExplorerPathToCommand}"
                                                    Header="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Common_ExplorerTo}}"
                                                    CommandParameter="{Binding (ListView.SelectedItem)}"/>
                                                <MenuItem Command="{x:Static player:Player.DeletePlayableOnPlaylistCommand}" 
                                                    Header="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Common_Delete}}"
                                                    CommandParameter="{Binding }"/>
                                            </ContextMenu>
                                        </ListView.ContextMenu>
                                        <ListView.View>
                                            <GridView ColumnHeaderContainerStyle="{StaticResource disabledColumn}">
                                                <!--{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Converter={StaticResource ListViewStarWidth}}-->
                                                <GridViewColumn  Width="50" Header="#" CellTemplate="{StaticResource cellRow1}"/>
                                                <GridViewColumn Width="NaN" CellTemplate="{StaticResource cellRow2}" >
                                                    <GridViewColumn.Header >
                                                        <TextBlock Tag="Fill" Text="Tracks"/>
                                                    </GridViewColumn.Header>
                                                </GridViewColumn>
                                                <GridViewColumn Width="60" Header="{materialDesign:PackIcon  Kind=ClockOutline,Size=24}" DisplayMemberBinding="{Binding DurationString}"/>
                                            </GridView>
                                        </ListView.View>
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                                                <Setter Property="Padding" Value="0"/>
                                                <EventSetter Event="MouseDoubleClick" Handler="PlaylistItem_MouseDoubleClick"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ListBoxItem" >
                                                            <Border x:Name="Border" 
                                                                Padding="8" Margin="0"
                                                                HorizontalAlignment="Stretch"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{DynamicResource MaterialDesignDivider}"
                                                                BorderThickness="0"
                                                                SnapsToDevicePixels="True">
                                                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                      Margin="2,4,0,4"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                    </ListView>
                                </ContentControl>
                            </materialDesign:Card>
                        </StackPanel>
                    </ContentControl>
                </ScrollViewer>
            </materialDesign:TransitionerSlide>
        </materialDesign:Transitioner>
        <widget:PlayerDockWidget x:Name="PlayerDock" Grid.Row="1" Background="{DynamicResource MaterialDesignPaper}" materialDesign:ShadowAssist.ShadowDepth="Depth0" Height="100"
                                     VerticalAlignment="Bottom">
            <widget:PlayerDockWidget.Effect>
                <DropShadowEffect Direction="90" Opacity="0.5" BlurRadius="10" ShadowDepth="2"/>
            </widget:PlayerDockWidget.Effect>
        </widget:PlayerDockWidget>
    </Grid>
</UserControl>
