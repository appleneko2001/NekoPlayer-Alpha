<UserControl x:Class="NekoPlayer.Wpf.Widget.PlayerDockWidget"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:main="clr-namespace:NekoPlayer"
             xmlns:local="clr-namespace:NekoPlayer.Wpf.Widget"
             xmlns:interfaces="clr-namespace:NekoPlayer.Wpf.Interfaces"
             xmlns:interfaces1="clr-namespace:NekoPlayer.Wpf.ModelViews"
             xmlns:converters="clr-namespace:NekoPlayer.Wpf.Converters"
             xmlns:commands="clr-namespace:NekoPlayer.Wpf.Commands"
             xmlns:ckind="clr-namespace:NekoPlayer.Wpf.ConverterKinds" xmlns:mousegestures="clr-namespace:NekoPlayer.Wpf.MouseGestures"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000">
    <UserControl.Resources>
        <converters:GetPlayerContextConverter x:Key="GetPlayerContext"/>
        <converters:ReplaceDefaultImageIfNullConverter x:Key="UseDefaultImageInsteadConverter"/>
        <converters:IntToPackIconConverter x:Key="IntToPackIconKind"/>
        <DataTemplate x:Key="cellRow1">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding TrackInfo.TrackId}" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="cellRow2">
            <StackPanel>
                <TextBlock Text="{Binding TrackInfo.Title}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Style="{StaticResource Subtitle1TextBlock}"/>
                <TextBlock Text="{Binding TrackInfo.Album}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"  Style="{StaticResource OverlineTextBlock}"/>
                <TextBlock Text="{Binding TrackInfo.Artist}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"  Style="{StaticResource OverlineTextBlock}"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <MouseBinding MouseAction="WheelClick" Command="{x:Static main:Player.VolumeChangeCommand}" CommandParameter="+">
            <MouseBinding.Gesture>
                <mousegestures:MouseWheelUp/>
            </MouseBinding.Gesture>
        </MouseBinding>
        <MouseBinding MouseAction="WheelClick" Command="{x:Static main:Player.VolumeChangeCommand}" CommandParameter="-">
            <MouseBinding.Gesture>
                <mousegestures:MouseWheelDown/>
            </MouseBinding.Gesture>
        </MouseBinding>
    </UserControl.InputBindings>
    <Grid x:Name="Root" VerticalAlignment="Bottom" DataContext="{Binding Converter={StaticResource GetPlayerContext}}" Cursor="Arrow" MouseEnter="Root_MouseEnter" MouseLeave="Root_MouseLeave" >
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="264"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.RowSpan="2" Grid.ColumnSpan="2">
            <Image x:Name="CoverImage" Width="100" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" HorizontalAlignment="Left" 
                    Source="{Binding Converter={StaticResource UseDefaultImageInsteadConverter}, ConverterParameter=NoDefault, Path=NowPlayingCover, IsAsync=True}"
                   RenderOptions.BitmapScalingMode="HighQuality">
                <Image.Resources>
                    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToolTip">
                                    <ContentPresenter/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Image.Resources>
                <Image.ToolTip>
                    <md:Card>
                        <Image Margin="0" Visibility="{Binding Converter={StaticResource NullableToVisibilityConverter}, Path=NowPlayingCover}" 
                               Width="{Binding Converter={StaticResource IntFromSettingsString}, ConverterParameter={StaticResource PreviewAlbumImageSize}, FallbackValue=240}" 
                               Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}" 
                               Source="{Binding Converter={StaticResource UseDefaultImageInsteadConverter}, Path=NowPlayingCover}" 
                               RenderOptions.BitmapScalingMode="HighQuality"/>
                    </md:Card>
                </Image.ToolTip>
            </Image>
            <StackPanel VerticalAlignment="Center" Margin="8,18,4,0" >
                <TextBlock Style="{StaticResource Body2TextBlock}" Foreground="{DynamicResource MaterialDesignBody}" Margin="0,2"
                           Text="{Binding NowPlayingItem.TrackInfo.Title}" TextTrimming="CharacterEllipsis" ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}"/>
                <TextBlock Style="{StaticResource Body2TextBlock}" Foreground="{DynamicResource MaterialDesignBody}" Margin="0,2"
                           TextTrimming="CharacterEllipsis" ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} - {1}">
                            <Binding Path="NowPlayingItem.TrackInfo.Artist" Converter="{StaticResource NullTargetToLangNode}" ConverterParameter="{StaticResource Playable_UnknownArtist}"/>
                            <Binding Path="NowPlayingItem.TrackInfo.Album" Converter="{StaticResource NullTargetToLangNode}" ConverterParameter="{StaticResource Playable_UnknownAlbum}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>
        </DockPanel>
        <DockPanel Grid.Column="1" Grid.ColumnSpan="3" Grid.RowSpan="1" Margin="100,0,0,0">
            <DockPanel Margin="8,0" DockPanel.Dock="Top">
                <TextBlock Margin="0,0,8,0" Foreground="{DynamicResource MaterialDesignBody}" Text="{Binding DurationString}"/>
                <Slider Maximum="{Binding Duration}" Value="{Binding Path=CurrentPosition, Mode=TwoWay}" IsEnabled="{Binding IsMediaLoaded}"
                        SmallChange="1" IsMoveToPointEnabled="True" Loaded="Slider_Loaded" LargeChange="5" Delay="100" Focusable="False"/>
            </DockPanel>
        </DockPanel>
        <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.ColumnSpan="1" Margin="0,0,0,0" Grid.RowSpan="1" Grid.Row="1">
            <Button Style="{StaticResource FlatButton}" Margin="8,0,8,0" Padding="4" Command="{x:Static main:Player.ShuffleCommand}"  Focusable="False">
                <Button.ToolTip>
                    <MultiBinding Converter="{StaticResource StringFormat}" ConverterParameter="{}{0}: {1}">
                        <Binding Converter="{StaticResource LanguagePack}" ConverterParameter="{StaticResource Player_Shuffle}"/>
                        <Binding Path="IsShuffleOn" Converter="{StaticResource BoolToSwitchText}" ConverterParameter="{x:Static ckind:Variants.SwitchTextVariants}"/>
                    </MultiBinding>
                </Button.ToolTip>
                <md:PackIcon Kind="{Binding Path=IsShuffleOn, Converter={StaticResource Boolean2PackIconKind}, 
                    ConverterParameter={x:Static ckind:Variants.ShuffleVariants}}" Width="24" Height="24" />
            </Button>
            <Button Style="{StaticResource FlatButton}" Margin="8,0,8,0" Content="{md:PackIcon Kind=SkipPrevious,Size=24}" Padding="4"
                     Command="{x:Static main:Player.PreviousCommand}"  ToolTip="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Player_PrevSong}}"  Focusable="False"/>
            <Button Style="{StaticResource MaterialDesignFloatingActionButton}" Margin="8,0,8,0" 
                Command="{x:Static main:Player.PlayPauseCommand}">
                <md:PackIcon Kind="{Binding Path=IsPlaying, Converter={StaticResource Boolean2PackIconKind}, 
                    ConverterParameter={x:Static ckind:Variants.PlayPauseVariants}}" Width="32" Height="32"/>
            </Button>

            <Button Style="{StaticResource FlatButton}" Margin="8,0,8,0" Content="{md:PackIcon Kind=SkipNext,Size=24}" Padding="4"
                    Command="{x:Static main:Player.NextCommand}" ToolTip="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Player_NextSong}}"  Focusable="False"/>
            <Button Style="{StaticResource FlatButton}" Margin="8,0,8,0" Padding="4"
                    Command="{x:Static main:Player.RepeatCommand}"  Focusable="False">
                <Button.ToolTip>
                    <MultiBinding Converter="{StaticResource StringFormat}" ConverterParameter="{}{0}: {1}">
                        <Binding Converter="{StaticResource LanguagePack}" ConverterParameter="{StaticResource Player_Repeat}"/>
                        <Binding Path="RepeatMode" Converter="{StaticResource IntToSwitchText}" ConverterParameter="{x:Static ckind:Variants.RepeatSwitchTextVariants}"/>
                    </MultiBinding>
                </Button.ToolTip>
                <md:PackIcon Width="24" Height="24" Kind="{Binding Converter={StaticResource IntToPackIconKind}, Path=RepeatMode, ConverterParameter={x:Static ckind:Variants.RepeatVariants}}"/>
            </Button>
        </StackPanel>

        <StackPanel Grid.Column="3" HorizontalAlignment="Right" Orientation="Horizontal" Grid.RowSpan="2" Grid.Row="0" VerticalAlignment="Stretch" Margin="0,0,0,20">

            <Button Margin="8,4" Style="{StaticResource FlatButton}" Padding="4" VerticalAlignment="Bottom" Focusable="False"
                    Visibility="{Binding Converter={StaticResource VisibilityConditionWithSettings}, ConverterParameter='bool,==,EnableLyric,true'}">
                <md:PackIcon Kind="SubtitlesOutline" Width="24" Height="24"/>
            </Button>
            <Button Margin="4" Style="{StaticResource FlatButton}" Padding="4" VerticalAlignment="Bottom"
                    Command="{x:Static main:Player.MuteCommand}"  ToolTip="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Player_Mute}}"  Focusable="False">
                <md:PackIcon Kind="{Binding Path=IsMuted, Converter={StaticResource Boolean2PackIconKind}, 
                    ConverterParameter={x:Static ckind:Variants.MuteVariants}}" Width="24" Height="24"/>
            </Button>
            <Slider Style="{StaticResource DiscreteSlider}" Width="112" 
                    SnapsToDevicePixels="True" Margin="0,15,0,0" VerticalAlignment="Stretch" SmallChange="1" LargeChange="5" Maximum="100"
                    Value="{Binding Volume}" IsSelectionRangeEnabled="True" >
                <Slider.ToolTip>
                    <MultiBinding Converter="{StaticResource StringFormat}" ConverterParameter="{}{0}: {1}">
                        <Binding Converter="{StaticResource LanguagePack}" ConverterParameter="{StaticResource Player_Volume}"/>
                        <Binding Path="Volume"/>
                    </MultiBinding>
                </Slider.ToolTip>
            </Slider>
            <!--Button Margin="4"  Style="{StaticResource FlatButton}" Padding="4" VerticalAlignment="Bottom" Content="{md:PackIcon Kind=Eject, Size=24}"
                    Command="{x:Static main:Player.EjectCommand}" Focusable="False"/-->
            <ToggleButton x:Name="PopupButton" Style="{StaticResource FlatButton}" Margin="8,4" Content="{md:PackIcon Kind=PlaylistMusic,Size=24}" Padding="4" VerticalAlignment="Bottom"
                     ToolTip="{Binding Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource Playlist_NowPlaying}}"  Focusable="False">
            </ToggleButton>
            <md:PopupBox HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Bottom" Style="{StaticResource PopupBoxNoButton}"
                         StaysOpen="True" PlacementMode="TopAndAlignRightEdges" PopupVerticalOffset="96" Focusable="False" Padding="0" 
                         IsPopupOpen="{Binding ElementName=PopupButton,Path=IsChecked, Mode=TwoWay}" ToggleContent="">

                <md:Transitioner x:Name="PlayQueuePage" SelectedIndex="{Binding LoadedPlaylist, Converter={StaticResource BoolToInt}, Mode=OneWay}" 
                                 MaxWidth="{Binding ElementName=PlayQueuePage, Path=SelectedItem.Width, FallbackValue=500}"
                                 MaxHeight="{Binding ElementName=PlayQueuePage, Path=SelectedItem.Height, FallbackValue=500}">
                    <md:TransitionerSlide Width="400" Height="100">
                        <Grid Margin="16">
                            <StackPanel>
                                <TextBlock Text="Nothing will be shown..." TextAlignment="Center" TextWrapping="Wrap"/>
                                <TextBlock Margin="0,16" Text="At least you need play a playlist first for show queues." TextAlignment="Center" TextWrapping="Wrap"/>
                            </StackPanel>
                        </Grid>
                    </md:TransitionerSlide>
                    <md:TransitionerSlide Width="600" Height="450">
                        <Grid Margin="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="90"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>

                            <ListView Grid.Row="1" x:Name="PlaylistListView" ItemsSource="{Binding CurrentPlaylist.Playables, NotifyOnTargetUpdated=True}" Padding="0" SelectionMode="Single" 
                                      Initialized="PlaylistListView_Initialized" >
                                <ListView.View>
                                    <GridView ColumnHeaderContainerStyle="{StaticResource disabledColumn}">
                                        <!--{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Converter={StaticResource ListViewStarWidth}}-->
                                        <GridViewColumn Width="50" Header="#" CellTemplate="{StaticResource cellRow1}"/>
                                        <GridViewColumn Width="NaN" CellTemplate="{StaticResource cellRow2}" >
                                            <GridViewColumn.Header >
                                                <TextBlock Tag="Fill" Text="Tracks"/>
                                            </GridViewColumn.Header>
                                        </GridViewColumn>
                                        <GridViewColumn Width="60" Header="{md:PackIcon Kind=ClockOutline,Size=24}" DisplayMemberBinding="{Binding DurationString}"/>
                                    </GridView>
                                </ListView.View>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                                        <Setter Property="Padding" Value="0"/>
                                        <EventSetter Event="MouseDoubleClick" Handler="PlaylistItem_MouseDoubleClick"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem" >
                                                    <Border x:Name="Border" 
                                                                Padding="8" Margin="0"
                                                                HorizontalAlignment="Stretch"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{DynamicResource MaterialDesignDivider}"
                                                                BorderThickness="0"
                                                                SnapsToDevicePixels="True">
                                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                      Margin="2,4,0,4"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                            <md:ColorZone md:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryMid" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                                <Grid  VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="52"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal" Margin="8" Grid.Row="0">
                                        <TextBlock Text="From playlist: " TextAlignment="Left" TextWrapping="Wrap" Style="{StaticResource Headline6TextBlock}"/>
                                        <TextBlock Text="{Binding CurrentPlaylist.Name}" TextAlignment="Left" TextWrapping="Wrap" Style="{StaticResource Headline6TextBlock}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="8,0" Grid.Row="1">
                                        <TextBlock Style="{StaticResource  CaptionTextBlock}" Foreground="{DynamicResource MaterialDesignBody}" Text="{Binding Path=CurrentPlaylist.FullDurationString, IsAsync=True, FallbackValue='Loading...'}"/>
                                        <Separator Margin="8,0"/>
                                        <TextBlock Style="{StaticResource  CaptionTextBlock}" Foreground="{DynamicResource MaterialDesignBody}" Text="{Binding Path=CurrentPlaylist.Playables.Count, IsAsync=True, FallbackValue='Loading...', Converter={StaticResource LanguagePack}, ConverterParameter={StaticResource TrackCount}}"/>
                                    </StackPanel>
                                    <ToggleButton x:Name="OptionButton" Style="{StaticResource FlatButton}" Foreground="{DynamicResource MaterialDesignBody}" Margin="8,4" Content="Options" Padding="4"  Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Focusable="False">
                                    </ToggleButton>
                                    <md:PopupBox IsPopupOpen="{Binding ElementName=OptionButton,Path=IsChecked, Mode=TwoWay}" Style="{StaticResource PopupBoxNoButton}" VerticalAlignment="Stretch" Grid.Row="1" Padding="0" HorizontalAlignment="Right"  ToggleContent=""
                                                 ClipToBounds="False">
                                        <Menu ClipToBounds="False"  HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" Style="{StaticResource VerticalMenu}" > 
                                            <MenuItem Header="Save" Icon="{md:PackIcon Kind=Floppy}" />
                                            <MenuItem Header="Clear" Icon="{md:PackIcon Kind=Clear}"  />
                                        </Menu>
                                    </md:PopupBox>
                                </Grid>
                            </md:ColorZone>
                        </Grid>
                    </md:TransitionerSlide>
                </md:Transitioner>
            </md:PopupBox>
        </StackPanel>
    </Grid>
</UserControl>
